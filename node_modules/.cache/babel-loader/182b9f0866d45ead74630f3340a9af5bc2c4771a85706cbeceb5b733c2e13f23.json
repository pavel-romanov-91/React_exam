{"ast":null,"code":"import { privateComputerLocation, privateUserLocation } from \"../constants/constants\";\n\n//объект для генерации кораблей\nexport const gameOptions = {\n  shipCount: [1, 2, 3, 4],\n  // массив из количества кораблей\n  shipSize: [4, 3, 2, 1],\n  // массив из типов кораблей 4х палубный, 3х палубный и т.д.\n\n  generateShips(type) {\n    let privateLocation; // зона вокруг корабля куда нельзя поставить новый\n    if (type === 'user') {\n      privateLocation = privateUserLocation;\n    } else {\n      privateLocation = privateComputerLocation;\n    }\n    const ships = [];\n\n    // генерирует шаблон для корабля (объект)\n    this.shipCount.forEach((count, index) => {\n      const size = this.shipSize[index];\n      for (let i = 0; i < count; i++) {\n        const ship = this.generateShipOptions(size, privateLocation);\n        ships.push(ship);\n      }\n    });\n    return ships;\n  },\n  // метод создает объект корабля\n  generateShipOptions(shipSize, privateLocation) {\n    const ship = {\n      hit: new Array(shipSize).fill(''),\n      location: []\n    };\n    const direction = Math.random() < .5; // генерируем направление корабля\n    let x, y;\n\n    // в зависимости от направления корабля генерируются его координаты\n    if (direction) {\n      x = Math.floor(Math.random() * 10);\n      y = Math.floor(Math.random() * (10 - shipSize));\n    } else {\n      x = Math.floor(Math.random() * (10 - shipSize));\n      y = Math.floor(Math.random() * 10);\n    }\n\n    // координаты добавляются в поле location корабля\n    for (let i = 0; i < shipSize; i++) {\n      if (direction) {\n        //горизонталльное\n        ship.location.push(x + '' + (y + i));\n      } else {\n        //вертикальное\n        ship.location.push(x + i + '' + y);\n      }\n    }\n\n    // проверка на безопасную зону вокруг корабля\n    if (this.checkPrivateLocation(ship.location, privateLocation)) {\n      return this.generateShipOptions(shipSize, privateLocation);\n    }\n    //добавляем, защищенные от расстановки корабля, ячейки в массив для хранения\n    this.addPrivateLocation(ship.location, privateLocation);\n    return ship;\n  },\n  // метод проверки на безопасную зону вокруг корабля\n  checkPrivateLocation(location, privateLocation) {\n    for (const coordinate of location) {\n      if (privateLocation.includes(coordinate)) {\n        return true;\n      }\n    }\n  },\n  // метод добавления координат в масив защищенной зоны\n  addPrivateLocation(location, privateLocation) {\n    for (let i = 0; i < location.length; i++) {\n      const startCoordinateX = location[i][0] - 1;\n      const startCoordinateY = location[i][1] - 1;\n      for (let j = startCoordinateX; j < startCoordinateX + 3; j++) {\n        for (let r = startCoordinateY; r < startCoordinateY + 3; r++) {\n          if (j >= 0 && j < 10 && r >= 0 && r < 10) {\n            const coordinate = j + '' + r;\n            if (!privateLocation.includes(coordinate)) {\n              privateLocation.push(coordinate);\n            }\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["privateComputerLocation","privateUserLocation","gameOptions","shipCount","shipSize","generateShips","type","privateLocation","ships","forEach","count","index","size","i","ship","generateShipOptions","push","hit","Array","fill","location","direction","Math","random","x","y","floor","checkPrivateLocation","addPrivateLocation","coordinate","includes","length","startCoordinateX","startCoordinateY","j","r"],"sources":["I:/react_exam/src/utils/game.js"],"sourcesContent":["import {privateComputerLocation, privateUserLocation} from \"../constants/constants\";\n\n//объект для генерации кораблей\nexport const gameOptions = {\n  shipCount: [1, 2, 3, 4], // массив из количества кораблей\n  shipSize:[4, 3, 2, 1],// массив из типов кораблей 4х палубный, 3х палубный и т.д.\n\n  generateShips(type) {\n    let privateLocation // зона вокруг корабля куда нельзя поставить новый\n    if(type === 'user') {\n      privateLocation = privateUserLocation\n    } else {\n      privateLocation = privateComputerLocation\n    }\n    const ships = []\n\n      // генерирует шаблон для корабля (объект)\n    this.shipCount.forEach(( count, index) => {\n      const size = this.shipSize[index]\n      for(let i = 0; i < count; i++) {\n        const ship = this.generateShipOptions(size, privateLocation)\n        ships.push(ship)\n      }\n    })\n\n    return ships\n  },\n  // метод создает объект корабля\n  generateShipOptions(shipSize, privateLocation) {\n    const ship = {\n      hit: new Array(shipSize).fill(''),\n      location: [],\n    }\n\n    const direction = Math.random() < .5 // генерируем направление корабля\n    let x, y\n\n    // в зависимости от направления корабля генерируются его координаты\n    if( direction ) {\n      x = Math.floor(Math.random() * 10)\n      y = Math.floor(Math.random() * (10 - shipSize) )\n    } else {\n      x = Math.floor(Math.random() * (10 - shipSize))\n      y = Math.floor(Math.random() * 10 )\n    }\n\n    // координаты добавляются в поле location корабля\n    for (let i = 0; i < shipSize; i ++) {\n      if( direction ) { //горизонталльное\n        ship.location.push(x + '' + (y + i))\n      } else { //вертикальное\n        ship.location.push((x + i) + '' + y)\n      }\n    }\n\n    // проверка на безопасную зону вокруг корабля\n    if(this.checkPrivateLocation(ship.location, privateLocation)) {\n      return this.generateShipOptions(shipSize, privateLocation)\n    }\n    //добавляем, защищенные от расстановки корабля, ячейки в массив для хранения\n    this.addPrivateLocation(ship.location, privateLocation)\n\n    return ship\n  },\n  // метод проверки на безопасную зону вокруг корабля\n  checkPrivateLocation(location, privateLocation) {\n    for(const coordinate of location) {\n      if (privateLocation.includes(coordinate)) {\n        return true\n      }\n    }\n  },\n\n  // метод добавления координат в масив защищенной зоны\n  addPrivateLocation(location, privateLocation) {\n    for(let i = 0; i < location.length; i++) {\n    const startCoordinateX = location[i][0] - 1\n    const startCoordinateY = location[i][1] - 1\n    for(let j = startCoordinateX; j < startCoordinateX + 3; j++) {\n      for(let r = startCoordinateY; r < startCoordinateY + 3; r++) {\n        if( j >= 0 && j < 10 && r >= 0 && r < 10 ) {\n          const coordinate = j + '' + r\n          if(!privateLocation.includes(coordinate)){\n            privateLocation.push(coordinate)\n          }\n        }\n      }\n    }\n    }\n  },\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}