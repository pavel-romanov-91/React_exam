{"ast":null,"code":"import { RESET_GAME, SET_BLOCK, SET_FOLLOWING, SET_GAME, SET_GAME_RESULT, SET_LOST_STATUS, SET_SHOT, SET_SHOT_MINUS_COUNT } from \"../actions/actionTypes\";\nimport { game } from \"../../constants/constants\";\nconst initialState = game;\nconst gameReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SET_GAME:\n      return {\n        ...state,\n        ...payload\n      };\n    case SET_BLOCK:\n      return {\n        ...state,\n        isBlock: !state.isBlock\n      };\n    case SET_SHOT:\n      return {\n        ...state,\n        ships: payload\n      };\n    case SET_SHOT_MINUS_COUNT:\n      const count = state.shipCount - 1;\n      return {\n        ...state,\n        shipCount: count\n      };\n    case RESET_GAME:\n      return {\n        ...initialState\n      };\n    case SET_FOLLOWING:\n      return {\n        ...state,\n        following: payload\n      };\n    case SET_LOST_STATUS:\n      return {\n        ...state,\n        isLost: true\n      };\n    case SET_GAME_RESULT:\n      return {\n        ...state,\n        modal: {\n          isModal: true,\n          value: payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport default gameReducer;","map":{"version":3,"names":["RESET_GAME","SET_BLOCK","SET_FOLLOWING","SET_GAME","SET_GAME_RESULT","SET_LOST_STATUS","SET_SHOT","SET_SHOT_MINUS_COUNT","game","initialState","gameReducer","state","type","payload","isBlock","ships","count","shipCount","following","isLost","modal","isModal","value"],"sources":["I:/react_exam/src/redux/reducers/gameReducer.js"],"sourcesContent":["import {\n  RESET_GAME, SET_BLOCK,\n  SET_FOLLOWING,\n  SET_GAME, SET_GAME_RESULT, SET_LOST_STATUS,\n  SET_SHOT,\n  SET_SHOT_MINUS_COUNT\n} from \"../actions/actionTypes\";\nimport {game} from \"../../constants/constants\";\n\nconst initialState = game\nconst gameReducer = (state= initialState, {type, payload}) => {\n   switch (type) {\n    case SET_GAME:\n      return {...state, ...payload}\n      case SET_BLOCK:\n       return { ...state, isBlock: !state.isBlock,}\n    case SET_SHOT:\n      return { ...state, ships: payload }\n    case SET_SHOT_MINUS_COUNT:\n      const count = state.shipCount - 1\n      return {...state, shipCount: count}\n     case RESET_GAME:\n       return {...initialState}\n     case SET_FOLLOWING:\n       return {...state, following: payload}\n     case SET_LOST_STATUS:\n       return {...state, isLost: true}\n     case SET_GAME_RESULT:\n       return {...state, modal: { isModal: true, value: payload } }\n    default:\n      return state\n  }\n}\n\nexport default gameReducer"],"mappings":"AAAA,SACEA,UAAU,EAAEC,SAAS,EACrBC,aAAa,EACbC,QAAQ,EAAEC,eAAe,EAAEC,eAAe,EAC1CC,QAAQ,EACRC,oBAAoB,QACf,wBAAwB;AAC/B,SAAQC,IAAI,QAAO,2BAA2B;AAE9C,MAAMC,YAAY,GAAGD,IAAI;AACzB,MAAME,WAAW,GAAGA,CAACC,KAAK,GAAEF,YAAY,EAAE;EAACG,IAAI;EAAEC;AAAO,CAAC,KAAK;EAC3D,QAAQD,IAAI;IACX,KAAKT,QAAQ;MACX,OAAO;QAAC,GAAGQ,KAAK;QAAE,GAAGE;MAAO,CAAC;IAC7B,KAAKZ,SAAS;MACb,OAAO;QAAE,GAAGU,KAAK;QAAEG,OAAO,EAAE,CAACH,KAAK,CAACG;MAAQ,CAAC;IAC/C,KAAKR,QAAQ;MACX,OAAO;QAAE,GAAGK,KAAK;QAAEI,KAAK,EAAEF;MAAQ,CAAC;IACrC,KAAKN,oBAAoB;MACvB,MAAMS,KAAK,GAAGL,KAAK,CAACM,SAAS,GAAG,CAAC;MACjC,OAAO;QAAC,GAAGN,KAAK;QAAEM,SAAS,EAAED;MAAK,CAAC;IACpC,KAAKhB,UAAU;MACb,OAAO;QAAC,GAAGS;MAAY,CAAC;IAC1B,KAAKP,aAAa;MAChB,OAAO;QAAC,GAAGS,KAAK;QAAEO,SAAS,EAAEL;MAAO,CAAC;IACvC,KAAKR,eAAe;MAClB,OAAO;QAAC,GAAGM,KAAK;QAAEQ,MAAM,EAAE;MAAI,CAAC;IACjC,KAAKf,eAAe;MAClB,OAAO;QAAC,GAAGO,KAAK;QAAES,KAAK,EAAE;UAAEC,OAAO,EAAE,IAAI;UAAEC,KAAK,EAAET;QAAQ;MAAE,CAAC;IAC/D;MACE,OAAOF,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}