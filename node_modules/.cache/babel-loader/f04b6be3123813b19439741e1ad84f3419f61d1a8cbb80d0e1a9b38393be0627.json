{"ast":null,"code":"var _jsxFileName = \"I:\\\\react_exam\\\\src\\\\components\\\\Cell\\\\Cell.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setBlock, setFollowing, setGameResult, setHit, setStatus } from \"../../redux/actions/actionCreators\";\nimport { setComputerShot } from \"../../redux/actions/actionCreatorsPC\";\nimport cn from \"classnames\";\nimport withField from \"../../HOCS/withField\";\nimport s from \"./Cell.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  cellId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [isMiss, setMiss] = useState(false);\n  const {\n    ships,\n    shipCount,\n    isBlock,\n    isLost\n  } = useSelector(state => state.game);\n  const isHit = useSelector(state => {\n    const {\n      ships\n    } = state.game;\n    const ship = ships.find(ship => ship.location.includes(cellId));\n    if (ship) {\n      const partOfShip = ship.location.indexOf(cellId);\n      return ship.hit[partOfShip];\n    }\n  });\n  const {\n    ships: computerShips,\n    shipCount: computerShipCount\n  } = useSelector(state => state.computer);\n  const isDead = useSelector(state => {\n    const {\n      ships\n    } = state.game;\n    const ship = ships.find(ship => ship.location.includes(cellId));\n    return ship && ship.dead;\n  });\n  useEffect(() => {\n    if (shipCount === 0) {\n      dispatch(setGameResult('You win!')); // выведем модальное окно что игрок победил\n    }\n    // eslint-disable-next-line\n  }, [shipCount]);\n  const handleCellClick = event => {\n    event.stopPropagation();\n    if (isLost || isBlock || !shipCount || isMiss) return;\n    // если игрок проиграл то тут клик недоступен\n    // если ходит комьютер то тут клик недоступен\n    // если подстрерил все корабли противника - то больше не ходишь\n    // запрет на клик по ячейкам\n    setMiss(!isMiss);\n    const cellId = event.target.dataset.id;\n    dispatch(setStatus('shot')); // изменить кол-во выстрелов\n    const res = dispatch(setHit(ships, shipCount, cellId));\n    // отправляем данные в store для смены состояния, в случае если попали в кораблик\n    // //  когда попали в кораблик, снова остается ход у игрока\n    // // если не попали - то условие ниже\n    if (!res) {\n      dispatch(setFollowing('Computer')); // поменяем состояние в сторе на того - чей ход\n      dispatch(setBlock()); //заблокируем клики по ячейке\n      setShotPc(computerShips, computerShipCount); // запустим ход компьютера\n    }\n  };\n\n  const setShotPc = (computerShips, computerShipCount) => {\n    // с небольшой задержкой ход компьютера, чтобы увидеть, что ход пк\n    setTimeout(() => {\n      const {\n        res,\n        data\n      } = dispatch(setComputerShot(computerShips));\n      if (res && computerShipCount !== 0) {\n        return setShotPc(data);\n      }\n    }, 300);\n  };\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: cn(s.cell, {\n      [s.cell_miss]: isMiss\n    }, {\n      [s.cell_hit]: isHit\n    }, {\n      [s.cell_dead]: isDead\n    }),\n    \"data-id\": cellId,\n    onClick: handleCellClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Cell, \"re3xXC5MojPI5CsTyIA8jacbSv0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Cell;\nexport default _c3 = withField(_c2 = /*#__PURE__*/React.memo(Cell));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"%default%$withField\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","setBlock","setFollowing","setGameResult","setHit","setStatus","setComputerShot","cn","withField","s","jsxDEV","_jsxDEV","Cell","cellId","_s","dispatch","isMiss","setMiss","ships","shipCount","isBlock","isLost","state","game","isHit","ship","find","location","includes","partOfShip","indexOf","hit","computerShips","computerShipCount","computer","isDead","dead","handleCellClick","event","stopPropagation","target","dataset","id","res","setShotPc","setTimeout","data","className","cell","cell_miss","cell_hit","cell_dead","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c3","_c2","memo","$RefreshReg$"],"sources":["I:/react_exam/src/components/Cell/Cell.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  setBlock,\n  setFollowing,\n  setGameResult,\n  setHit,\n  setStatus\n} from \"../../redux/actions/actionCreators\";\nimport { setComputerShot } from \"../../redux/actions/actionCreatorsPC\";\nimport cn from \"classnames\";\nimport withField from \"../../HOCS/withField\";\nimport s from \"./Cell.module.scss\";\n\n\n\nconst Cell = ( { cellId }) => {\n\n  const dispatch = useDispatch()\n  const [isMiss, setMiss] = useState(false)\n  const { ships, shipCount, isBlock, isLost } = useSelector(state => state.game)\n\n  const isHit = useSelector( state => {\n    const { ships } = state.game\n    const ship = ships.find( ship => ship.location.includes(cellId))\n    if (ship) {\n      const partOfShip = ship.location.indexOf(cellId)\n      return ship.hit[partOfShip]\n    }\n  })\n\n  const { ships: computerShips, shipCount: computerShipCount } = useSelector(state => state.computer)\n\n  const isDead = useSelector( state => {\n      const { ships } = state.game\n      const ship = ships.find( ship => ship.location.includes(cellId))\n      return ship && ship.dead\n  })\n\n\n  useEffect( () => {\n    if(shipCount === 0) {\n      dispatch(setGameResult('You win!')) // выведем модальное окно что игрок победил\n    }\n    // eslint-disable-next-line\n  }, [shipCount])\n\n\n  const handleCellClick = (event) => {\n    event.stopPropagation()\n    if(isLost || isBlock || !shipCount || isMiss) return\n    // если игрок проиграл то тут клик недоступен\n    // если ходит комьютер то тут клик недоступен\n    // если подстрерил все корабли противника - то больше не ходишь\n    // запрет на клик по ячейкам\n    setMiss(!isMiss)\n    const cellId = event.target.dataset.id\n    dispatch( setStatus('shot') ) // изменить кол-во выстрелов\n    const res = dispatch( setHit(ships, shipCount, cellId) )\n    // отправляем данные в store для смены состояния, в случае если попали в кораблик\n    // //  когда попали в кораблик, снова остается ход у игрока\n    // // если не попали - то условие ниже\n    if(!res) {\n      dispatch(setFollowing('Computer')) // поменяем состояние в сторе на того - чей ход\n      dispatch( setBlock() ) //заблокируем клики по ячейке\n      setShotPc(computerShips, computerShipCount) // запустим ход компьютера\n    }\n  }\n\n\n  const setShotPc = (computerShips, computerShipCount) => {\n    // с небольшой задержкой ход компьютера, чтобы увидеть, что ход пк\n   setTimeout( () => {\n     const { res, data } = dispatch( setComputerShot(computerShips) )\n     if(res && computerShipCount !== 0) {\n       return setShotPc(data)\n     }\n   }, 300)\n  }\n\n\n  return (\n    <td\n      className={ cn(\n          s.cell,\n          { [s.cell_miss]: isMiss },\n          { [s.cell_hit]: isHit },\n          { [s.cell_dead]: isDead }\n        )}\n      data-id={cellId}\n      onClick={ handleCellClick }\n    />\n  )\n}\n\nexport default withField( React.memo(Cell) )"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SACEC,QAAQ,EACRC,YAAY,EACZC,aAAa,EACbC,MAAM,EACNC,SAAS,QACJ,oCAAoC;AAC3C,SAASC,eAAe,QAAQ,sCAAsC;AACtE,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,CAAC,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInC,MAAMC,IAAI,GAAGA,CAAE;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAE5B,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,MAAM,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM;IAAEoB,KAAK;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAE9E,MAAMC,KAAK,GAAGxB,WAAW,CAAEsB,KAAK,IAAI;IAClC,MAAM;MAAEJ;IAAM,CAAC,GAAGI,KAAK,CAACC,IAAI;IAC5B,MAAME,IAAI,GAAGP,KAAK,CAACQ,IAAI,CAAED,IAAI,IAAIA,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAACf,MAAM,CAAC,CAAC;IAChE,IAAIY,IAAI,EAAE;MACR,MAAMI,UAAU,GAAGJ,IAAI,CAACE,QAAQ,CAACG,OAAO,CAACjB,MAAM,CAAC;MAChD,OAAOY,IAAI,CAACM,GAAG,CAACF,UAAU,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,MAAM;IAAEX,KAAK,EAAEc,aAAa;IAAEb,SAAS,EAAEc;EAAkB,CAAC,GAAGjC,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACY,QAAQ,CAAC;EAEnG,MAAMC,MAAM,GAAGnC,WAAW,CAAEsB,KAAK,IAAI;IACjC,MAAM;MAAEJ;IAAM,CAAC,GAAGI,KAAK,CAACC,IAAI;IAC5B,MAAME,IAAI,GAAGP,KAAK,CAACQ,IAAI,CAAED,IAAI,IAAIA,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAACf,MAAM,CAAC,CAAC;IAChE,OAAOY,IAAI,IAAIA,IAAI,CAACW,IAAI;EAC5B,CAAC,CAAC;EAGFvC,SAAS,CAAE,MAAM;IACf,IAAGsB,SAAS,KAAK,CAAC,EAAE;MAClBJ,QAAQ,CAACZ,aAAa,CAAC,UAAU,CAAC,CAAC,EAAC;IACtC;IACA;EACF,CAAC,EAAE,CAACgB,SAAS,CAAC,CAAC;EAGf,MAAMkB,eAAe,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvB,IAAGlB,MAAM,IAAID,OAAO,IAAI,CAACD,SAAS,IAAIH,MAAM,EAAE;IAC9C;IACA;IACA;IACA;IACAC,OAAO,CAAC,CAACD,MAAM,CAAC;IAChB,MAAMH,MAAM,GAAGyB,KAAK,CAACE,MAAM,CAACC,OAAO,CAACC,EAAE;IACtC3B,QAAQ,CAAEV,SAAS,CAAC,MAAM,CAAE,CAAC,EAAC;IAC9B,MAAMsC,GAAG,GAAG5B,QAAQ,CAAEX,MAAM,CAACc,KAAK,EAAEC,SAAS,EAAEN,MAAM,CAAE,CAAC;IACxD;IACA;IACA;IACA,IAAG,CAAC8B,GAAG,EAAE;MACP5B,QAAQ,CAACb,YAAY,CAAC,UAAU,CAAC,CAAC,EAAC;MACnCa,QAAQ,CAAEd,QAAQ,CAAC,CAAE,CAAC,EAAC;MACvB2C,SAAS,CAACZ,aAAa,EAAEC,iBAAiB,CAAC,EAAC;IAC9C;EACF,CAAC;;EAGD,MAAMW,SAAS,GAAGA,CAACZ,aAAa,EAAEC,iBAAiB,KAAK;IACtD;IACDY,UAAU,CAAE,MAAM;MAChB,MAAM;QAAEF,GAAG;QAAEG;MAAK,CAAC,GAAG/B,QAAQ,CAAET,eAAe,CAAC0B,aAAa,CAAE,CAAC;MAChE,IAAGW,GAAG,IAAIV,iBAAiB,KAAK,CAAC,EAAE;QACjC,OAAOW,SAAS,CAACE,IAAI,CAAC;MACxB;IACF,CAAC,EAAE,GAAG,CAAC;EACR,CAAC;EAGD,oBACEnC,OAAA;IACEoC,SAAS,EAAGxC,EAAE,CACVE,CAAC,CAACuC,IAAI,EACN;MAAE,CAACvC,CAAC,CAACwC,SAAS,GAAGjC;IAAO,CAAC,EACzB;MAAE,CAACP,CAAC,CAACyC,QAAQ,GAAG1B;IAAM,CAAC,EACvB;MAAE,CAACf,CAAC,CAAC0C,SAAS,GAAGhB;IAAO,CAC1B,CAAE;IACJ,WAAStB,MAAO;IAChBuC,OAAO,EAAGf;EAAiB;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEN,CAAC;AAAA1C,EAAA,CA7EKF,IAAI;EAAA,QAESb,WAAW,EAEkBC,WAAW,EAE3CA,WAAW,EASsCA,WAAW,EAE3DA,WAAW;AAAA;AAAAyD,EAAA,GAjBtB7C,IAAI;AA+EV,eAAA8C,GAAA,GAAelD,SAAS,CAAAmD,GAAA,gBAAE/D,KAAK,CAACgE,IAAI,CAAChD,IAAI,CAAE,CAAC;AAAA,IAAA6C,EAAA,EAAAE,GAAA,EAAAD,GAAA;AAAAG,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}