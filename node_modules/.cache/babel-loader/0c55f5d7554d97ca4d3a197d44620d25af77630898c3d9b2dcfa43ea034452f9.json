{"ast":null,"code":"import { CHANGE_HEADER, RESET_GAME, RESET_STATUS, RESET_STORE, SET_AUTH, SET_BLOCK, SET_FOLLOWING, SET_GAME, SET_GAME_RESULT, SET_LOST_STATUS, SET_OPPONENT, SET_SHOT, SET_SHOT_MINUS_COUNT, SET_STATUS, SET_USER } from \"./actionTypes\";\nimport { findNeedShip, generateModifyShipArray } from \"../../utils/support\";\n\n//==========================auth action\nexport const setUserName = userName => {\n  return {\n    type: SET_USER,\n    payload: userName\n  };\n};\nexport const setOpponentName = pcName => {\n  return {\n    type: SET_OPPONENT,\n    payload: pcName\n  };\n};\nexport const setAuth = ({\n  userName,\n  pcName\n}) => {\n  return {\n    type: SET_AUTH,\n    payload: {\n      userName,\n      pcName\n    }\n  };\n};\n// ==================================================\n\nexport const setStatus = statusType => {\n  return {\n    type: SET_STATUS,\n    payload: statusType\n  };\n};\nexport const changeHeader = title => {\n  return {\n    type: CHANGE_HEADER,\n    payload: title\n  };\n};\n\n//============================================user game actions\n//make shot\nexport const setShot = ships => {\n  return {\n    type: SET_SHOT,\n    payload: ships\n  };\n};\n\n//minus ships count\nexport const setShotMinusCount = () => {\n  return {\n    type: SET_SHOT_MINUS_COUNT\n  };\n};\n\n// add flag is dead to ship\nexport const setShipDead = ships => {\n  return {\n    type: SET_SHOT,\n    payload: ships\n  };\n};\n\n// add initial values for ships location and hit\nexport const setGame = gameOptions => {\n  return {\n    type: SET_GAME,\n    payload: gameOptions\n  };\n};\n//after exit game reset store\nexport const resetGame = () => {\n  return {\n    type: RESET_GAME\n  };\n};\n//after exit game reset status component\nexport const resetStatus = () => {\n  return {\n    type: RESET_STATUS\n  };\n};\n//change user / computer\nexport const setFollowing = howIsFollowing => {\n  return {\n    type: SET_FOLLOWING,\n    payload: howIsFollowing\n  };\n};\n// block/unblock click on user field\nexport const setBlock = () => ({\n  type: SET_BLOCK\n});\n\n// reset all data in store\nexport const resetStore = () => ({\n  type: RESET_STORE\n});\n\n//set lost status if user lost\nexport const setLostStatus = () => ({\n  type: SET_LOST_STATUS\n});\n\n//view modal window\nexport const setGameResult = value => ({\n  type: SET_GAME_RESULT,\n  payload: value\n});\n\n// set hit for ships\nexport const setHit = (ships, shipCount, id) => {\n  return dispatch => {\n    const {\n      ship,\n      shipIndex\n    } = findNeedShip(ships, id);\n    // if ship is true\n    if (ship) {\n      const partOfShip = ship.location.indexOf(id); //get position for id from ship location\n      if (partOfShip >= 0) {\n        const {\n          newShips,\n          newShip,\n          hit\n        } = generateModifyShipArray(ship, shipIndex, partOfShip, ships); //create data for new ship\n\n        dispatch(setShot(newShips)); // dispatch shot - modify state in store for needed cell\n        dispatch(setStatus('hit')); // dispatch new status to modify status component`s state\n\n        if (!hit.includes('')) {\n          newShip.dead = true; // set dead status to true\n          newShips[shipIndex] = newShip; // change status\n          dispatch(setShipDead(newShips)); //dispatch dead status for ship - modify state for cell\n          dispatch(setStatus('dead')); // dispatch new status to modify status component`s state\n          dispatch(setShotMinusCount()); // minus ship count\n        }\n      }\n\n      return true;\n    }\n    return false;\n  };\n};","map":{"version":3,"names":["CHANGE_HEADER","RESET_GAME","RESET_STATUS","RESET_STORE","SET_AUTH","SET_BLOCK","SET_FOLLOWING","SET_GAME","SET_GAME_RESULT","SET_LOST_STATUS","SET_OPPONENT","SET_SHOT","SET_SHOT_MINUS_COUNT","SET_STATUS","SET_USER","findNeedShip","generateModifyShipArray","setUserName","userName","type","payload","setOpponentName","pcName","setAuth","setStatus","statusType","changeHeader","title","setShot","ships","setShotMinusCount","setShipDead","setGame","gameOptions","resetGame","resetStatus","setFollowing","howIsFollowing","setBlock","resetStore","setLostStatus","setGameResult","value","setHit","shipCount","id","dispatch","ship","shipIndex","partOfShip","location","indexOf","newShips","newShip","hit","includes","dead"],"sources":["I:/react_exam/src/redux/actions/actionCreators.js"],"sourcesContent":["import {\n  CHANGE_HEADER, RESET_GAME, RESET_STATUS, RESET_STORE,\n  SET_AUTH, SET_BLOCK, SET_FOLLOWING, SET_GAME, SET_GAME_RESULT, SET_LOST_STATUS,\n  SET_OPPONENT, SET_SHOT, SET_SHOT_MINUS_COUNT,\n  SET_STATUS, SET_USER\n} from \"./actionTypes\";\nimport {findNeedShip, generateModifyShipArray} from \"../../utils/support\";\n\n\n//==========================auth action\nexport const setUserName = (userName) => {\n  return {\n    type: SET_USER,\n    payload: userName\n  }\n}\n\nexport const setOpponentName = (pcName) => {\n  return {\n    type: SET_OPPONENT,\n    payload: pcName\n  }\n}\n\nexport const setAuth = ({ userName, pcName }) => {\n  return {\n    type: SET_AUTH,\n    payload: {\n      userName,\n      pcName\n    }\n  }\n}\n// ==================================================\n\n\nexport const setStatus = (statusType) => {\n  return {\n    type: SET_STATUS,\n    payload: statusType\n  }\n}\n\nexport const changeHeader = (title) => {\n  return {\n    type: CHANGE_HEADER,\n    payload: title\n  }\n}\n\n//============================================user game actions\n//make shot\nexport const setShot = (ships) => {\n  return {\n    type: SET_SHOT,\n    payload: ships\n  }\n}\n\n//minus ships count\nexport const setShotMinusCount = () => {\n  return {\n    type: SET_SHOT_MINUS_COUNT,\n  }\n}\n\n// add flag is dead to ship\nexport const setShipDead = (ships) => {\n  return {\n    type: SET_SHOT,\n    payload: ships\n  }\n}\n\n// add initial values for ships location and hit\nexport const setGame = (gameOptions) => {\n  return {\n    type: SET_GAME,\n    payload: gameOptions\n  }\n}\n//after exit game reset store\nexport const resetGame = () => {\n  return {\n    type: RESET_GAME\n  }\n}\n//after exit game reset status component\nexport const resetStatus = () => {\n  return {\n    type: RESET_STATUS\n  }\n}\n//change user / computer\nexport const setFollowing = (howIsFollowing) => {\n  return {\n    type: SET_FOLLOWING,\n    payload: howIsFollowing\n  }\n}\n// block/unblock click on user field\nexport const setBlock = () => ({\n  type: SET_BLOCK\n})\n\n// reset all data in store\nexport const resetStore = () => ({\n  type:RESET_STORE\n})\n\n//set lost status if user lost\nexport const setLostStatus = () => ({\n  type: SET_LOST_STATUS\n})\n\n//view modal window\nexport const setGameResult = (value) => ({\n  type: SET_GAME_RESULT,\n  payload: value\n})\n\n// set hit for ships\nexport const setHit = ( ships , shipCount, id ) => {\n\n  return (dispatch) => {\n    const { ship, shipIndex } = findNeedShip(ships, id)\n    // if ship is true\n    if(ship) {\n      const partOfShip = ship.location.indexOf(id) //get position for id from ship location\n      if(partOfShip >= 0) {\n        const {newShips, newShip, hit} = generateModifyShipArray(ship, shipIndex, partOfShip, ships) //create data for new ship\n\n        dispatch( setShot(newShips) ) // dispatch shot - modify state in store for needed cell\n        dispatch( setStatus('hit') ) // dispatch new status to modify status component`s state\n\n        if(!hit.includes('')) {\n          newShip.dead = true // set dead status to true\n          newShips[shipIndex] = newShip // change status\n          dispatch( setShipDead(newShips) ) //dispatch dead status for ship - modify state for cell\n          dispatch( setStatus('dead')) // dispatch new status to modify status component`s state\n          dispatch( setShotMinusCount() ) // minus ship count\n        }\n      }\n      return true\n    }\n    return false\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}